MODAL 

<div class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" id="myModal{{f.0.id_especies.pk}}" aria-hidden="true">
	<div class="modal-dialog modal-lg" role="document">
	    <div class="modal-content">
	    	<div class="modal-header">
	    		<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
	    		<h4 class="modal-title text-center" id="myModalLabel">{{f.2.nombre}}</h4>
	    	</div>
	    	<div class="modal-body">
				<div class="row borde3">
					<div class="col-xs-12">
						<div class="row">
							<label class="col-xs-12 text-center"><strong>Nombre del Ave</strong></label>
							<p class="col-xs-12 text-justify">{{ f.2.nombre }}</p>
						</div>
						<div class="row negro textblanco">
							<div class="col-xs-6">
								<label class="text-center"><strong>Sinonimo</strong></label>
								<p class="font-2">{{ f.2.sinonimo }}</p>
							</div>
							<div class="col-xs-6">
								<label class="text-center"><strong>Ecologia</strong></label>
								<p class="font-2">{{ f.2.ecologia }}</p>
							</div>
						</div>
						<div class="row">
							<div class="col-xs-3">
								<label class="text-center"><strong>Año de publiccion</strong></label>
								<p class="font-2">{{ f.2.anio_publicacion }}</p>
							</div>
							<div class="col-xs-3">
								<label class="text-center"><strong>Año de recolección</strong></label>
								<p class="font-2">{{ f.2.anio_collecion }}</p>
							</div>
							<div class="col-xs-3">
								<label class="text-center"><strong>Famila</strong></label>
								<p class="font-2">{{ f.2.famia_id_familia.nombre }}</p>
							</div>
							<div class="col-xs-3">
								<label class="text-center"><strong>Amenaza</strong></label>
								<p class="font-2">{{ f.2.uicn_id_uicn.nombre }}</p>
							</div>
						</div>
					</div>
				</div>
		  	</div>
		    <div class="modal-footer">
		        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
	      	</div>
	    </div>
	</div>
</div>

___________________________________________________________
<form action="" method="post">
		{% csrf_token %}
		<select name="tipolicencia" id="">
			<option>--------------</option>
			{%for c in tipolicencia%}
				<option value="{{c.idtiplic}}">{{c.nombre}}</option>
			{%endfor%}
		</select>
		<button class="btn btn-primary btn-lg" type="submit" name="licencias">Licencias</button>
	</form>

--Vista--
if request.method=="POST" and 'licencias' in request.POST:
        print "-->"+request.POST["tipolicencia"]
        idlic=int(request.POST["tipolicencia"])
        #v = document.getElementByID("tipolicencia").value
        #print v
        urlfotos = Imagen.objects.filter(idlicencia=idlic)
        
____________________________________________________________

<div class="container">
		<h4>Amenazas</h4>
	    {% for v in vamenazas.listamenazas %}
			<p class="col-xs-3" id="{{ v.idamenaza }}"> {{ v.clasificacion }}</p>
	    {% endfor %}
	    <hr>
    	<h4>Aves</h4>
    	{% for av in vaves.aves %}
			<p class="col-xs-3" id="{{av.codigo}}">{{ av.codigoespecie }}</p>
			<p class="col-xs-3">{{ av.namebird }}</p>
			<p class="col-xs-3">{{ av.sinonimo }}</p>
	    {% endfor %}
	    <h4>Autores</h4>
		{% for p in vlista %}
			<p>{{ p.idautor }} {{p.autor}}  {{ p.bibliografia }} {{ p.a_opublicacion }}</p>
			<!--<p>{{ p.a_orecoleccion }}</p>
			<p>{{ p.fecha }}</p>
			<hr>-->
    	{% endfor %}
	</div>
____________________________________________________________


para la imagen responsive

class="img-rounded"		efecto cuadro con bordes
class="img-circle"		efecto circulo
class="img-thumbnail"	efecto cuadro con contorno-borde
____________________________________________________________


para consultas ORM (views)
"""
ordenar (campo) orden inverso ("­-nombre")
Editor.objects.order_by("nombre")
where ?? y ??
Editor.objects.filter(ciudad="Berkeley", estado="CA") 
WHERE nombre LIKE '%press%' ;
Editor.objects.filter(nombre__contains="press") 
para un unico objeto
Editor.objects.get(nombre="Apress Publishing") 

LIMITE DE DATOS
En cambio filter()[0], no hace saltar ninguna excepción.
Limitar el número de registros devueltos
Entry.objects.all()[:5]  # los cinco primeros
Entry.objects.all()[5:10]  # del quinto al décimo

limite de consulta LIMIT 1; 
Editor.objects.all()[0] 

Objeto.objects.all() -> Todo el conjunto
Objeto.objects.filter() -> Un filtro para incluir
Objeto.objects.exclude() -> Un filtro para excluir
Objeto.objects.get() -> Busca un solo objeto

Entry.objects.filter(pub_date__isnull=True)
Blogs.objects.filter(entry__headline__contains=’Pep’, entry__pub_date__year=2006) 
Todos los blogs que tengan alguna entrada cuyo titulo tenga Pep y se haya publicado en 2006
Blogs.objects.filter(entry__headline__contains=’Pep’).filter(entry__pub_date__year=2006) 
Todos los que tengan Pep y todos los que se hayan publicado en 2006

ORDENAR
Entry.objects.filter(pub_date__year=2005).order_by('-pub_date', 'headline')
The result above will be ordered by pub_date descending, then by headline ascending.

actualizar
Editor.objects.filter(id=1).update(nombre='Apress Publishing') 
eliminar
Editor.objects.filter(ciudad='USA').delete() 


SI NO HAY DATOS
Si no hay datos salta la excepción DoesNotExist

from django.core.exceptions import ObjectdoesNotExist
try:
	one_entry=Entry.object.get(pk=numero)
except ObjectDoesNotExist, e:
	mensaje=("La entrada %n no existe" % (numero))

opcional
try:
	p = Editor.objects.get(nombre='Apress') 
except Editor.DoesNotExist:
	print ("Apress no está en la base de datos.")
else:
	print ("Apress está en la base de datos.") 
"""
____________________________________________________________

